---
AWSTemplateFormatVersion: '2010-09-09'
Description: An AWS CloudFormation template

Parameters:
  GithubToken:
    Description: Github api token
    Type: String
  GithubProjectName:
    Description: Github Project Name
    Type: String
  ProjectName:
    Description: Project name
    Type: String

Outputs:
  AccessKeyId:
    Value:
      Ref: ReAccessKey
    Description: The IAM AccessKeyId
  SecretAccessKey:
    Value:
      Fn::GetAtt:
      - ReAccessKey
      - SecretAccessKey
    Description: The IAM AccessSecretKey
  SNSTopic:
    Value:
      Ref: ReTopic

Resources:

  ReInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: ReCodeBuildRole

  ReCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.eu-west-1.amazonaws.com
                - codebuild.eu-central-1.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codebuild-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Effect: Allow
                Action:
                  - sns:*
                Resource:
                  - Ref: ReTopic

  ReCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}
      Description: !Sub ${AWS::StackName}
      ServiceRole: !GetAtt ReCodeBuildRole.Arn
      Artifacts:
        Type: no_artifacts
      Environment:
        Type: linuxContainer
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/eb-python-3.4-amazonlinux-64:2.1.6
      Source:
        Location: !Sub https://github.com/${GithubProjectName}
        Type: GITHUB
      TimeoutInMinutes: 10

  ReUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub ${AWS::StackName}-user
      Path: "/"
      Policies:
      - PolicyName:
          !Sub ${AWS::StackName}-policy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Action:
            - sns:Publish
            Effect: Allow
            Resource:
              Ref: ReTopic

  ReAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        Ref: ReUser

  ReTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub ${AWS::StackName}
      TopicName: !Sub ${AWS::StackName}
      Subscription:
      - Endpoint:
          Fn::GetAtt:
            - ReLambda
            - Arn
        Protocol: lambda

  ReLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}
      Handler: app.handler
      Role: !GetAtt [IamRoleLambda, Arn]
      Code:
        ZipFile:
          ../dist/deployment.zip
      Environment:
        Variables:
          GITHUB_LAMBDAS_REPO:
            Ref: GithubProjectName
          GITHUB_OAUTH:
            Ref: GithubToken
          PROJECT_NAME:
            Ref: ProjectName
      Runtime: python2.7
      MemorySize: 1024
      Timeout: 90

  IamRoleLambda:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        !Sub ${AWS::StackName}-role-lambda
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"

  IamPolicyLambda:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName:
        !Sub ${AWS::StackName}-lambda
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
            !Sub arn:aws:logs:${AWS::Region}:*:*
        - Effect: Allow
          Action:
          - codebuild:*
          Resource: "*"
      Roles:
      - Ref: IamRoleLambda

  ReLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: ReTopic
      FunctionName:
        Fn::GetAtt:
        - ReLambda
        - Arn
